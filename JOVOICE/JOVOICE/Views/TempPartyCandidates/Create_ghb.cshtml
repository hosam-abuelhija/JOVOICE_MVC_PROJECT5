@model JOVOICE.Models.TempPartyCandidateViewModel
@{
    ViewBag.Title = "الترشح للقائمة الحزبية";
    Layout = "~/Views/Shared/_LayoutPage1gh.cshtml";
}

<head>
    <style>
        body {
            font-family: 'Lato', sans-serif;
        }

        h1 {
            margin-bottom: 40px;
        }

        input,
        textarea {
            text-align: right;
            margin-bottom: 20px;
        }

        label {
            color: #333;
            display: block;
            text-align: right;
        }

        .btn-send {
            font-weight: 300;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            width: 100%;
            margin-left: 3px;
        }

        .btn-success {
            background-color: #e02454;
            border-color: #e02454;
            border-radius: 50rem;
        }

            .btn-success:hover {
                background-color: #003a66;
                border-color: #ff5050;
            }

        .help-block.with-errors {
            color: #ff5050;
            margin-top: 5px;
        }

        .card {
            margin-left: 10px;
            margin-right: 10px;
        }

        th, td, select {
            text-align: right;
        }
    </style>
</head>

<div class="container-fluid service overflow-hidden py-5">
    <div class="container py-5">
        <div class="section-title text-center mb-5 wow fadeInUp" data-wow-delay="0.1s">
            <div class="sub-style">
                <h5 class="sub-title text-primary px-3">طلب الترشح للقوائم الحزبية</h5>
            </div>
            <h1 class="display-5 mb-4">نموذج تقديم طلب الترشح للقوائم العامة (الحزبية)</h1>
            <p class="mb-0">
                نحن هنا لتقديم الدعم الكامل في عملية الترشح للقوائم الحزبية في الانتخابات النيابية الأردنية.
                يمكنك ملء النموذج أدناه لتقديم طلبك والترشح بنجاح ضمن القوائم العامة
            </p>
        </div>

        <div class="container">
            <div class="row">
                <div class="col-lg-12 mx-auto">
                    <div class="card mt-2 mx-auto p-4 bg-light">
                        <div class="card-body bg-light">
                            @using (Html.BeginForm("Create_ghb", "TempPartyCandidates", FormMethod.Post, new { @class = "form-horizontal", id = "PartyCanForm" }))

                            {
                                @Html.AntiForgeryToken()

                                <div class="controls">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.PartyName, "اسم الحزب", new { @class = "control-label" })
                                                @Html.EditorFor(m => m.PartyName, new { htmlAttributes = new { @class = "form-control", placeholder = "يرجى إدخال اسم الحزب" } })
                                            </div>
                                        </div>

                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ElectionArea, "الدائرة الانتخابية", new { @class = "control-label" })
                                                @Html.DropDownListFor(m => m.ElectionArea, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), new { @class = "form-control", id = "electionAreaDropdown" })
                                                @Html.EditorFor(m => m.ElectionArea, new { htmlAttributes = new { @class = "form-control", id = "electionAreaInput", placeholder = "يرجى إدخال الدائرة الانتخابية", style = "display:none;" } })
                                            </div>
                                        </div>


                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.City, "المحافظة", new { @class = "control-label" })
                                                @Html.DropDownListFor(
                                                    m => m.City,
                                                    new SelectList(new List<SelectListItem>
                                                    {
                                                        new SelectListItem { Text = "إختر المحافظة", Value = "" },
                                                        new SelectListItem { Text = "إربد", Value = "إربد" },
                                                        new SelectListItem { Text = "المفرق", Value = "المفرق" },
                                                        // Add other cities here
                                                    }, "Value", "Text", Model.City),
                                                    new { @class = "form-control", id = "cityDropdown" }
                                                )
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row mt-4">
                                    <div class="col-md-12">
                                        <div class="table-responsive">
                                            <table class="table table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th>البريد الإلكتروني</th>
                                                        <th>تاريخ الميلاد</th>
                                                        <th>الديانة</th>
                                                        <th>الجنس</th>
                                                        <th>الرقم الوطني</th>
                                                        <th>الاسم</th>
                                                        <th>التسلسل</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @for (int i = 0; i < Model.Candidates.Count; i++)
                                                    {
                                                        <tr>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.EditorFor(m => m.Candidates[i].email, new { htmlAttributes = new { @class = "form-control", placeholder = "البريد الإلكتروني", id = "email_" + i, @readonly = "readonly" } })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].email, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.EditorFor(m => m.Candidates[i].birthdate, new { htmlAttributes = new { @class = "form-control", type = "date", id = "birthdate_" + i, @readonly = "readonly" } })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].birthdate, "", new { @class = "text-danger" })
                                                                    <p>@ViewBag.age</p>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.DropDownList($"Candidates[{i}].religion", new SelectList(new List<SelectListItem>
                                                                    {
                        new SelectListItem { Text = " الديانة", Value = "", Disabled = true },
                        new SelectListItem { Text = "مسلم", Value = "مسلم" },
                        new SelectListItem { Text = "مسيحي", Value = "مسيحي" }
                    }, "Value", "Text", Model.Candidates[i].religion), new { @class = "form-control", id = "religion_" + i, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].religion, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.DropDownList($"Candidates[{i}].gender", new SelectList(new List<SelectListItem>
                                                                    {
                        new SelectListItem { Text = " الجنس", Value = "", Disabled = true },
                        new SelectListItem { Text = "ذكر", Value = "male" },
                        new SelectListItem { Text = "أنثى", Value = "female" }
                    }, "Value", "Text", Model.Candidates[i].gender), new { @class = "form-control", id = "gender_" + i, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].gender, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.EditorFor(m => m.Candidates[i].national_id, new { htmlAttributes = new { @class = "form-control", placeholder = "الرقم الوطني", id = "national_id_" + i } })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].national_id, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="form-group">
                                                                    @Html.EditorFor(m => m.Candidates[i].candidatename, new { htmlAttributes = new { @class = "form-control", placeholder = "الاسم", id = "name_" + i, @readonly = "readonly" } })
                                                                    @Html.ValidationMessageFor(m => m.Candidates[i].candidatename, "", new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                            <td>@(i + 1)</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <a class="btn btn-success btn-send pt-2 btn-block" href="@Url.Action("candMain", "Home")">
                                                العودة إلى خدمات المترشحين
                                            </a>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <button id="sendBtnParty" type="submit" class="btn btn-success btn-send pt-2 btn-block">إرسال النموذج</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            var cityDropdown = document.getElementById('cityDropdown');
            var electionAreaInput = document.getElementById('electionAreaInput');
            var electionAreaDropdown = document.getElementById('electionAreaDropdown');
            var candidateRows = document.querySelectorAll('tbody tr');
            var nationalIdInputs = document.querySelectorAll('input[name$="national_id"]');

            var electionAreas = {
                "إربد": [
                    { Text: "إربد الأولى", Value: "إربد الأولى", MaxCandidates: 10 },
                    { Text: "إربد الثانية", Value: "إربد الثانية", MaxCandidates: 10 }
                ],
                "المفرق": [
                    { Text: "المفرق", Value: "المفرق", MaxCandidates: 10 }
                ]
            };

            function updateCandidateRows(maxCandidates) {
                candidateRows.forEach(function (row, index) {
                    if (index < maxCandidates) {
                        row.style.display = '';
                        row.querySelectorAll('input, select').forEach(function (input) {
                            input.required = true;
                            input.disabled = false;
                        });
                    } else {
                        row.style.display = 'none';
                        row.querySelectorAll('input, select').forEach(function (input) {
                            input.required = false;
                            input.disabled = true;
                        });
                    }
                });
            }

            function checkDuplicateNationalIds() {
                var ids = [];
                var hasDuplicate = false;

                nationalIdInputs.forEach(function (input) {
                    if (input.value && ids.includes(input.value)) {
                        hasDuplicate = true;
                        alert("الرقم الوطني موجود بالفعل.");
                        input.value = '';
                    } else {
                        ids.push(input.value);
                    }
                });

                return hasDuplicate;
            };

            electionAreaDropdown.addEventListener('change', function () {
                var selectedArea = electionAreaDropdown.value;
                var maxCandidates = 10;

                Object.values(electionAreas).forEach(function (areas) {
                    areas.forEach(function (area) {
                        if (area.Value === selectedArea) {
                            maxCandidates = area.MaxCandidates;
                        }
                    });
                });

                updateCandidateRows(maxCandidates);
            });

            cityDropdown.addEventListener('change', function () {
                var selectedCity = cityDropdown.value;

                if (electionAreas[selectedCity]) {
                    var options = electionAreas[selectedCity].map(function (area) {
                        return new Option(area.Text, area.Value);
                    });

                    electionAreaDropdown.innerHTML = '';
                    options.forEach(function (option) {
                        electionAreaDropdown.add(option);
                    });

                    electionAreaDropdown.style.display = 'block';
                    electionAreaInput.style.display = 'none';
                } else {
                    electionAreaDropdown.style.display = 'none';
                    electionAreaInput.style.display = 'block';
                }
            });

            nationalIdInputs.forEach(function (input) {
                input.addEventListener('change', checkDuplicateNationalIds);
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("sendBtnParty").addEventListener("click", function (event) {
                event.preventDefault(); // Prevent the default button action
                displayAlert();
            });
        });

        function displayAlert() {
            Swal.fire({
                title: "هل أنت متأكد من تقديم طلب الترشح؟",
                text: "بعد تأكيدك، سيتم إرسال الطلب للمراجعة وسيتم التواصل معك قريبًا بخصوص حالته",
                icon: "warning",
                showDenyButton: true,
                confirmButtonText: "تأكيد",
                denyButtonText: "إلغاء",
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: "تم إرسال الطلب!",
                        text: "تم إرسال طلبك بنجاح، وسوف يتم التواصل معك لإبلاغك بحالة الطلب قريبًا",
                        icon: "success"
                    }).then(() => {
                        document.getElementById("PartyCanForm").submit();
                    });
                } else if (result.isDenied) {
                    Swal.close();
                }
            });
        }


$(document).ready(function () {
    $('input[id^="national_id_"]').on('change', function () {
        var index = $(this).attr('id').split('_')[2];
        var nationalId = $(this).val();

        if (nationalId) {
            $.ajax({
                url: '@Url.Action("GetUserData", "TempPartyCandidates")',
                type: 'GET',
                data: { nationalNumber: nationalId },
                success: function (data) {
                    if (data.error) {
                        alert(data.error); // Display error message
                        $('#national_id_' + index).val(''); // Clear national ID field
                    } else {
                        $('#name_' + index).val(data.name);
                        $('#email_' + index).val(data.email);
                        $('#birthdate_' + index).val(data.birthdate);
                        $('#religion_' + index).val(data.religion);
                        $('#gender_' + index).val(data.gender);

                        // Check if the name field is null or empty
                        if (!data.name) {
                            $('#national_id_' + index).val(''); // Clear national ID field
                        }
                    }
                }
            });
        }
    });


});


    </script>
}

